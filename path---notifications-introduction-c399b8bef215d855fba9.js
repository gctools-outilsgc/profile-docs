webpackJsonp([71570639227792],{391:function(e,t){e.exports={data:{eng:{html:'<helmet>\n<title> Notifications - Introduction </title>\n</helmet>\n<h2>Introduction</h2>\n<p>As part of a decentrailzed microservice system, the Notification-as-a-service (NAAS) allows for real-time notifications on both a per-application and consolidated view basis.  For example, a common navigation component distributed across many applications on a platform can display user notifications for not only the current application, but any applications linked to Notification as a Service.</p>\n<p>NAAS can store various metadata elements commonly found in notifications, such as action levels, both email and online notification types, who or what generated the notification, etc.</p>\n<h2>Tech stack</h2>\n<p>The Notification-as-a-Service is architected on Apollo server and leverages Prisma and PostgreSQL for data storage.</p>\n<ul>\n<li><a href="https://www.apollographql.com/docs/apollo-server/">Apollo Server</a></li>\n<li><a href="https://www.prisma.io/">Prisma</a></li>\n<li><a href="https://www.postgresql.org/">PostgreSQL</a></li>\n</ul>\n<h2>Communication with other services</h2>\n<p>Notification-as-a-Service listens for specific events on the Message Queue that then triggers the creation of a notification object for applications on the Message Queue.  The GraphQL API interface can also create notifications for applications not on the Message Queue. For example, when a user identifies another user as their supervisor through Profile-as-a-Service, a message is created and sent through the Message Queue specifying that user action is required by the supervisor to approve or deny the user\'s request.  Notification-as-a-Service listens for this event, as well as other possible applications, and triggers the creation of a notification object with the information provided through the Message Queue.</p>\n<h2>Authentication and authorization</h2>\n<p>The Notification-as-a-Service relies on the GCaccount access token to ensure information can only be accessed and modified by authorized individuals and applications. The access token is the key to all Open Accessible Digital Workspace applications and contains information specific to the user and the application trying to access the data. This data determines if the user and/or application can gain access to read or modify the information.</p>',htmlAst:{type:"root",children:[{type:"element",tagName:"helmet",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"title",properties:{},children:[{type:"text",value:" Notifications - Introduction "}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Introduction"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"As part of a decentrailzed microservice system, the Notification-as-a-service (NAAS) allows for real-time notifications on both a per-application and consolidated view basis.  For example, a common navigation component distributed across many applications on a platform can display user notifications for not only the current application, but any applications linked to Notification as a Service."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"NAAS can store various metadata elements commonly found in notifications, such as action levels, both email and online notification types, who or what generated the notification, etc."}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Tech stack"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The Notification-as-a-Service is architected on Apollo server and leverages Prisma and PostgreSQL for data storage."}]},{type:"text",value:"\n"},{type:"element",tagName:"ul",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://www.apollographql.com/docs/apollo-server/"},children:[{type:"text",value:"Apollo Server"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://www.prisma.io/"},children:[{type:"text",value:"Prisma"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://www.postgresql.org/"},children:[{type:"text",value:"PostgreSQL"}]}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Communication with other services"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Notification-as-a-Service listens for specific events on the Message Queue that then triggers the creation of a notification object for applications on the Message Queue.  The GraphQL API interface can also create notifications for applications not on the Message Queue. For example, when a user identifies another user as their supervisor through Profile-as-a-Service, a message is created and sent through the Message Queue specifying that user action is required by the supervisor to approve or deny the user's request.  Notification-as-a-Service listens for this event, as well as other possible applications, and triggers the creation of a notification object with the information provided through the Message Queue."}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Authentication and authorization"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The Notification-as-a-Service relies on the GCaccount access token to ensure information can only be accessed and modified by authorized individuals and applications. The access token is the key to all Open Accessible Digital Workspace applications and contains information specific to the user and the application trying to access the data. This data determines if the user and/or application can gain access to read or modify the information."}]}],data:{quirksMode:!1}},frontmatter:{title:"Introduction",path:"/notifications/introduction",lang:"en"}},fr:{html:'<helmet>\n<title> Notifications - Introduction </title>\n</helmet>\n<h2>Introduction</h2>\n<p>Dans le cadre d’un système de microservice décentralisé, la Notification en tant que service (NAAS) permet des notifications en temps réel, tant par application que par vue consolidée. Par exemple, un composant de navigation commun réparti entre de nombreuses applications sur une plateforme peut afficher des notifications aux utilisateurs non seulement pour l’application actuelle, mais aussi pour toutes les applications liées à Notification en tant que service.</p>\n<p>Le système NAAS peut stocker divers éléments de métadonnées qu’on retrouve couramment dans les notifications, comme les niveaux d’action, les types de notification par courriel et en ligne, l’auteur ou l’action qui a déclenché la notification.</p>\n<h2>Pile technologique</h2>\n<p>Le système Notification comme service est conçu sur le serveur Apollo et exploite Prisma et PostgreSQL pour le stockage de données.</p>\n<ul>\n<li><a href="https://www.apollographql.com/docs/apollo-server/">Apollo Server</a></li>\n<li><a href="https://www.prisma.io/">Prisma</a></li>\n<li><a href="https://www.postgresql.org/">PostgreSQL</a></li>\n</ul>\n<h2>Communication avec d’autres services</h2>\n<p>Le système Notification comme service écoute pour déterminer des événements particuliers sur la file d’attente des messages et déclenche ensuite la création d’un objet de notification pour les applications sur la File d’attente des messages. L’interface API GraphQL peut également créer des notifications pour les applications qui ne se trouvent pas dans la file d’attente des messages. Par exemple, lorsqu’un utilisateur indique qu’un autre utilisateur est son superviseur par à l’aide de Profil comme service, un message est créé et envoyé au moyen de la file d’attente des messages précisant que l’utilisateursuperviseur doit agir pour approuver ou refuser la demande de l’utilisateur. Le système Notification comme service écoute cet événement, ainsi que d’autres applications possibles, et déclenche la création d’un objet de notification avec l\'information fournie par la file d’attente des messages.</p>\n<h2>Authentification et autorisation</h2>\n<p>Le système Notification comme service utilise le jeton d’accès à GCcompte pour vérifier que seules les personnes et les applications autorisées peuvent avoir accès à l’information et la modifier. Le jeton d’accès est la clé de toutes les applications de l’espace de travail numérique, ouvert et accessible et contient des renseignements propres à l’utilisateur et à l’application qui tente d’accéder aux données. Ces données permettent de déterminer si l’utilisateur et/ou l’application peuvent avoir un accès permettant de lire ou de modifier l’information.</p>',htmlAst:{type:"root",children:[{type:"element",tagName:"helmet",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"title",properties:{},children:[{type:"text",value:" Notifications - Introduction "}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Introduction"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Dans le cadre d’un système de microservice décentralisé, la Notification en tant que service (NAAS) permet des notifications en temps réel, tant par application que par vue consolidée. Par exemple, un composant de navigation commun réparti entre de nombreuses applications sur une plateforme peut afficher des notifications aux utilisateurs non seulement pour l’application actuelle, mais aussi pour toutes les applications liées à Notification en tant que service."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Le système NAAS peut stocker divers éléments de métadonnées qu’on retrouve couramment dans les notifications, comme les niveaux d’action, les types de notification par courriel et en ligne, l’auteur ou l’action qui a déclenché la notification."}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Pile technologique"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Le système Notification comme service est conçu sur le serveur Apollo et exploite Prisma et PostgreSQL pour le stockage de données."}]},{type:"text",value:"\n"},{type:"element",tagName:"ul",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://www.apollographql.com/docs/apollo-server/"},children:[{type:"text",value:"Apollo Server"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://www.prisma.io/"},children:[{type:"text",value:"Prisma"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://www.postgresql.org/"},children:[{type:"text",value:"PostgreSQL"}]}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Communication avec d’autres services"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Le système Notification comme service écoute pour déterminer des événements particuliers sur la file d’attente des messages et déclenche ensuite la création d’un objet de notification pour les applications sur la File d’attente des messages. L’interface API GraphQL peut également créer des notifications pour les applications qui ne se trouvent pas dans la file d’attente des messages. Par exemple, lorsqu’un utilisateur indique qu’un autre utilisateur est son superviseur par à l’aide de Profil comme service, un message est créé et envoyé au moyen de la file d’attente des messages précisant que l’utilisateursuperviseur doit agir pour approuver ou refuser la demande de l’utilisateur. Le système Notification comme service écoute cet événement, ainsi que d’autres applications possibles, et déclenche la création d’un objet de notification avec l'information fournie par la file d’attente des messages."}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Authentification et autorisation"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Le système Notification comme service utilise le jeton d’accès à GCcompte pour vérifier que seules les personnes et les applications autorisées peuvent avoir accès à l’information et la modifier. Le jeton d’accès est la clé de toutes les applications de l’espace de travail numérique, ouvert et accessible et contient des renseignements propres à l’utilisateur et à l’application qui tente d’accéder aux données. Ces données permettent de déterminer si l’utilisateur et/ou l’application peuvent avoir un accès permettant de lire ou de modifier l’information."}]}],data:{quirksMode:!1}},frontmatter:{title:"Introduction",path:"/notifications/introduction",lang:"fr"}},overview:{totalCount:2,edges:[{node:{frontmatter:{title:"Introduction",path:"/overview/introduction",lang:"en",subnav:"1/About/À notre sujet/1"}}},{node:{frontmatter:{title:"Introduction",path:"/overview/introduction",lang:"fr",subnav:"1/About/À notre sujet/1"}}}]},architecture:{totalCount:6,edges:[{node:{frontmatter:{title:"Introduction",path:"/architecture/introduction",lang:"fr",subnav:"0/Architecture/Architecture/1"}}},{node:{frontmatter:{title:"Underlying Technology",path:"/architecture/underlying_technology",lang:"en",subnav:"0/Architecture/Architecture/2"}}},{node:{frontmatter:{title:"Technologie sous-jacente",path:"/architecture/underlying_technology",lang:"fr",subnav:"0/Architecture/Architecture/2"}}},{node:{frontmatter:{title:"System Architecture",path:"/architecture/system_design",lang:"en",subnav:"0/Architecture/Architecture/3"}}},{node:{frontmatter:{title:"Integrations",path:"/architecture/integrations",lang:"en",subnav:"0/Architecture/Architecture/4"}}},{node:{frontmatter:{title:"Introduction",path:"/architecture/introduction",lang:"en",subnav:"0/Architecture/Architecutre/1"}}}]},identity:null,profile:{totalCount:18,edges:[{node:{frontmatter:{title:"Introduction",path:"/profile/introduction",lang:"en",subnav:"1/Profile/Profil/1"}}},{node:{frontmatter:{title:"Quick Start",path:"/profile/quick-start",lang:"en",subnav:"1/Profile/Profil/1"}}},{node:{frontmatter:{title:"Introduction",path:"/profile/introduction",lang:"fr",subnav:"1/Profile/Profil/1"}}},{node:{frontmatter:{title:"Démarrage rapide",path:"/profile/quick-start",lang:"fr",subnav:"1/Profile/Profil/1"}}},{node:{frontmatter:{title:"Data Models",path:"/profile/data-models",lang:"en",subnav:"1/Profile/Profil/2"}}},{node:{frontmatter:{title:"Modèles de données",path:"/profile/data-models",lang:"fr",subnav:"1/Profile/Profil/2"}}},{node:{frontmatter:{title:"Retrieving Data",path:"/profile/queries",lang:"en",subnav:"1/Profile/Profil/3"}}},{node:{frontmatter:{title:"Récupération des données",path:"/profile/queries",lang:"fr",subnav:"1/Profile/Profil/3"}}},{node:{frontmatter:{title:"Modifying Data",path:"/profile/mutations",lang:"en",subnav:"1/Profile/Profil/4"}}},{node:{frontmatter:{title:"Modifications des données",path:"/profile/mutations",lang:"fr",subnav:"1/Profile/Profil/4"}}},{node:{frontmatter:{title:"Avatars",path:"/profile/avatars",lang:"en",subnav:"1/Profile/Profil/5"}}},{node:{frontmatter:{title:"Avatars",path:"/profile/avatars",lang:"fr",subnav:"1/Profile/Profil/5"}}},{node:{frontmatter:{title:"Business Logic",path:"/profile/logic",lang:"en",subnav:"1/Profile/Profil/6"}}},{node:{frontmatter:{title:"Logique d'entreprise",path:"/profile/logic",lang:"fr",subnav:"1/Profile/Profil/6"}}},{node:{frontmatter:{title:"Use Cases",path:"/profile/usecases",lang:"en",subnav:"1/Profile/Profil/7"}}},{node:{frontmatter:{title:"Cas d’utilisation",path:"/profile/usecases",lang:"fr",subnav:"1/Profile/Profil/7"}}},{node:{frontmatter:{title:"Errors",path:"/profile/errors",lang:"en",subnav:"1/Profile/Profil/8"}}},{node:{frontmatter:{title:"Errors (Translate)",path:"/profile/errors",lang:"fr",subnav:"1/Profile/Profil/8"}}}]},notifications:{totalCount:8,edges:[{node:{frontmatter:{title:"Introduction",path:"/notifications/introduction",lang:"en",subnav:"1/Notifications/Notifications/1"}}},{node:{frontmatter:{title:"Introduction",path:"/notifications/introduction",lang:"fr",subnav:"1/Notifications/Notifications/1"}}},{node:{frontmatter:{title:"Data Models",path:"/notifications/data-models",lang:"en",subnav:"1/Notifications/Notifications/2"}}},{node:{frontmatter:{title:"Modèles de données",path:"/notifications/data-models",lang:"fr",subnav:"1/Notifications/Notifications/2"}}},{node:{frontmatter:{title:"Retrieving Data",path:"/notifications/queries",lang:"en",subnav:"1/Notifications/Notifications/3"}}},{node:{frontmatter:{title:"Récupération des données",path:"/notifications/queries",lang:"fr",subnav:"1/Notifications/Notifications/3"}}},{node:{frontmatter:{title:"Modifying Data",path:"/notifications/mutations",lang:"en",subnav:"1/Notifications/Notifications/4"}}},{node:{frontmatter:{title:"Modifications des données",path:"/notifications/mutations",lang:"fr",subnav:"1/Notifications/Notifications/4"}}}]}},pathContext:{}}}});
//# sourceMappingURL=path---notifications-introduction-c399b8bef215d855fba9.js.map